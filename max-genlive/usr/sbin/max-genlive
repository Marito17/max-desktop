#!/bin/bash

if [ "$1" = "amd64" ]; then
  LOCAL_MIRROR=1 MIRROR=192.168.0.2 ENABLE_EXTRA=1 AMD64=1 max-genlive
  exit 0
elif [ "$1" = "i386" ]; then
  LOCAL_MIRROR=1 MIRROR=192.168.0.2 ENABLE_EXTRA=1 ENABLE_EXTRA_INFANTIL=1 ENABLE_NANO=1 max-genlive
  exit 0
fi


# Hacer el cd de MaX remasterizando el de Ubuntu

DISTRO=lucid
DISTRO_VERSION="10.04"
ARCH=i386
NANOARCH=i386
MAX_VERSION="6.0-rc4"
IMAGE_NAME="MaX-${MAX_VERSION}"
TITLE="MaX 6.0"

unset HOME
export LC_ALL=C
export LANG=C


stamp=$(date '+%Y%m%d_%H%M')
created=$(date '+%Y%m%d')

if [ "$MIRROR" = "" ]; then
  MIRROR=192.168.0.2/mirror
fi

if [ "$AMD64" = "1" ]; then
  ARCH=amd64
fi

if [ "$LOCAL_MIRROR" = "" ]; then
  LOCAL_MIRROR=
else
  LOCAL_MIRROR=1
fi

if [ "$ENABLE_EXTRA" = "" ]; then
  ENABLE_EXTRA=
else
  ENABLE_EXTRA=1
fi

if [ "$ENABLE_EXTRA_INFANTIL" = "" ]; then
  ENABLE_EXTRA_INFANTIL=
else
  ENABLE_EXTRA_INFANTIL=1
fi

if [ "$ENABLE_NANO" = "" ]; then
  ENABLE_NANO=
else
  ENABLE_NANO=1
fi

if [ "$ENABLE_NANOMAX_MOODLE" = "1" ]; then
  NANOMAX_MOODLE=1
else
  NANOMAX_MOODLE=0
fi


CURDIR=$(pwd)

CHROOT=$CURDIR/chroot.${ARCH}
NANOCHROOT=$CURDIR/nanochroot.${ARCH}
CDRW=$CURDIR/cdimage.${ARCH}
CDINF=$CURDIR/cdinfantil
NANOMAX=$CDRW/nanomax
#MKSQUASHFS=/usr/local/bin/mksquashfs
MKSQUASHFS=/usr/bin/mksquashfs

PAQUETES_EXTRA_MAIN="b43-fwcutter build-essential dpkg-dev fakeroot g++-4.3 libstdc++6-4.3-dev g++ capiutils ipppd "
PAQUETES_EXTRA_MAIN="$PAQUETES_EXTRA_MAIN isdnutils-base isdnutils-xtools libcapi20-3 libcapi20-dev pppdcapiplugin libatm1 "
PAQUETES_EXTRA_MAIN="$PAQUETES_EXTRA_MAIN linux-wlan-ng-doc linux-wlan-ng localechooser-data lupin-support mouseemu ndisgtk "
PAQUETES_EXTRA_MAIN="$PAQUETES_EXTRA_MAIN ndiswrapper-common ndiswrapper-utils-1.9 oem-config-gtk oem-config patch pptp-linux setserial"

PAQUETES_EXTRA_RESTRICTED="drdsl"
PAQUETES_INFANTIL="max-desktop-infantil-primaria max-infantil"


PAQUETES_EXTRA="tcos max-alumno max-profesor max-servidor max-terminales virtualbox-ose backharddi-ng"
PAQUETES_EXTRA="$PAQUETES_EXTRA max-tcos-alumno max-tcos-profesor"
PAQUETES_EXTRA="$PAQUETES_EXTRA nvidia-glx-180 linux-wlan-ng-firmware linux-firmware max-desktop-infantil-primaria max-infantil"

BLACKLIST_PKGS="jetty resolvconf gdm-guest-session emacs22 emacs22-bin-common emacs22-common emacsen-common"
BLACKLIST_PKGS="$BLACKLIST_PKGS python-ubuntuone python-ubuntuone-client python-ubuntuone-storageprotocol ubuntuone-client"
BLACKLIST_PKGS="$BLACKLIST_PKGS ubuntuone-client-gnome rhythmbox-ubuntuone-music-store libubuntuone-1.0-1"
BLACKLIST_PKGS="$BLACKLIST_PKGS icedtea6-plugin icedtea-6-jre-cacao kpackagekit arora openjdk-6-doc"
BLACKLIST_PKGS="$BLACKLIST_PKGS x11proto-core-dev x11proto-composite-dev python2.6-dev python-dev libglade2.0-cil-dev xtrans-dev"
BLACKLIST_PKGS="$BLACKLIST_PKGS x11proto-kb-dev x11proto-input-dev x11proto-core-dev libxt-dev libxdmcp-dev libxcb1-dev libxau-dev"
BLACKLIST_PKGS="$BLACKLIST_PKGS libx11-dev libltdl-dev libplymouth-dev libpthread-stubs0-dev"
BLACKLIST_PKGS="$BLACKLIST_PKGS mythbuntu-default-settings xfce4-panel xfce4-settings xfce4-utils"
BLACKLIST_PKGS="$BLACKLIST_PKGS freemind-doc libatk1.0-doc libglib2.0-doc libgtk2.0-doc libpango1.0-doc lilypond-doc winff-doc xorg-docs-core"


NEW_ISOLINUX=/usr/share/max-genlive/isolinux
GENLIVE=/usr/share/max-genlive
APT_OPTS="-y --force-yes -o Dpkg::Options::=\"--force-confnew\""
HOOKS=/usr/share/max-genlive/hooks/


MY_NAME=$(basename $0)


ayuda() {
cat << EOF
  Ayuda de max-genlive:

    max-genlive i386
    max-genlive amd64

    No hacen falta demasiadas cosas para hacer generar un livecd pero
    existen algunas variables para personalizarlo más:

    LOCAL_MIRROR=1 usará /usr/share/max-genlive/sources.list-local
                   como repositorio para hacer las descargas
                   Viene configurado como $MIRROR LOCAL_MIRROR=$LOCAL_MIRROR

    MIRROR=$MIRROR IP o nombre de equipo que se usará para el mirror

    DISABLE_SQUASHFS=1 ni comprime ni descomprime el archivo squashfs (para hacer pruebas)

    DISABLE_CLEAN=1 no borra los directorios temporales

    ENABLE_EXTRA=1 Añade al DVD varios paquetes (ver variable PAQUETES_EXTRA)
                   Para usar esta opción tienes que ser desarrollador de max y tener cuenta
                   SSH en max.educa.madrid.org porque hay que subir el archivo Release
                   firmarlo con la clave GPG de MaX y descargar el Release.gpg

    ENABLE_EXTRA_INFANTIL=1 Crea un CDROM multiarquitectura  de complementos para
                            infantil y primaria (sólo en i386)

    ENABLE_NANO=1 Generar NanoMax y CDlive

    ONLY_NANO_CDROM=1 Generar CDROM NanoMax y salir

    ENABLE_NANOMAX_MOODLE=1 Añadir moodle a nanoMAX

    AMD64=1 Build amd64 images (default i386)

EOF
}

_exit() {
  echo "Se ha producido un error:"
  echo "--------------------------------"
  echo "$@"
  echo "--------------------------------"
  . $HOOKS/90umount
  echo "matando $MY_NAME"
  killall $MY_NAME
}

_echo() {
  echo ""
  echo " *  $@"
  echo ""
}


_revert_invoke() {
 if [ "$1" != "" ]; then
   DIR=$1
 else
   DIR=$CHROOT
 fi
 if [ -e $DIR/usr/sbin/invoke-rc.d.REAL ]; then
   _echo "Revirtiendo /usr/sbin/invoke-rc.d"
   mv $DIR/usr/sbin/invoke-rc.d.REAL $DIR/usr/sbin/invoke-rc.d
 fi
 if [ -e $DIR/sbin/start-stop-daemon.REAL ]; then
   _echo "Revirtiendo /sbin/start-stop-daemon"
   mv $DIR/sbin/start-stop-daemon.REAL $DIR/sbin/start-stop-daemon
 fi
 if [ -e $DIR/sbin/initctl.distrib ]; then
   rm $DIR/sbin/initctl
   chroot $DIR dpkg-divert --local --rename --remove /sbin/initctl
 fi
}

_add_invoke() {
 if [ "$1" != "" ]; then
   DIR=$1
 else
   DIR=$CHROOT
 fi
  if [ ! -e $DIR/usr/sbin/invoke-rc.d.REAL ]; then
    # Cambiamos invoke-rc.d
    mv $DIR/usr/sbin/invoke-rc.d $DIR/usr/sbin/invoke-rc.d.REAL
    cat << EOF > $DIR/usr/sbin/invoke-rc.d
#!/bin/sh
echo "" >&2
echo "  ** Fake invoke-rc.d called with args: '\$@'" >&2
echo "" >&2
exit 0
EOF
    chmod +x $DIR/usr/sbin/invoke-rc.d
  fi

  if [ ! -e $DIR/sbin/start-stop-daemon.REAL ]; then
    # Cambiamos start-stop-daemon
    mv $DIR/sbin/start-stop-daemon $DIR/sbin/start-stop-daemon.REAL
    cat << EOF > $DIR/sbin/start-stop-daemon
#!/bin/sh
echo "" >&2
echo "  ** Fake start-stop-daemon called with args: '\$@'" >&2
echo "" >&2
exit 0
EOF
    chmod +x $DIR/sbin/start-stop-daemon
  fi

}


if [ "$1" = "--help" ]; then
  ayuda
  exit 1
fi


# esto es para pruebas
#. /usr/share/max-genlive/hooks/10mountiso
#. /usr/share/max-genlive/hooks/20configurechroot
#. /usr/share/max-genlive/hooks/55addmaxpackages

#. /usr/share/max-genlive/hooks/10debootstrap
#. /usr/share/max-genlive/hooks/20configurechroot
#. /usr/share/max-genlive/hooks/30upgrade
#. /usr/share/max-genlive/hooks/59zzinfantil
#_exit 1

if [ "$ONLY_NANO_CDROM" = "1" ]; then
  . /usr/share/max-genlive/hooks/90umount
  . /usr/share/max-genlive/hooks/75nanomax
  . /usr/share/max-genlive/hooks/90umount
  _exit "Fin de pruebas"
fi

for hook in $HOOKS/*; do
  #_echo "Cargando extension $hook"
  [ -f $hook ] && . $hook || _exit "Error ejecutando $hook"
done

_echo "Terminado"

exit 0
